AWSTemplateFormatVersion: "2010-09-09"

Description: >
  Tikal 

Parameters:
  EnvironmentName:
    Type: String
    Description: An environment name that will be prefixed to resource names

  Vpc:
    Type: AWS::EC2::VPC::Id
    Description: The VPC to which the server is deployed
    Default: vpc-491df834

  SubnetId:
    Type: AWS::EC2::Subnet::Id
    Description: Subnet in which to deploy the server
    Default: subnet-712bfc50


  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: Name of key pair to allow SSH access to the Tikal server
    Default: tikal

  ImageId:
    Type:  String
    Default: ami-02d096b4878c881c0
    Description: AMI ID, defaulting to the latest Amazon ECS-Optimized AMI (linux) for the region

  InstanceType:
    Type: String
    Default: t2.micro
    Description: ECS EC2 instance type

  AllowedCidrBlock:
    Type: String
    Description: IP range (CIDR notation) for the address(es) that will be allowed to remotely access the web services
    Default: 192.114.148.0/22

  SSHPort:
    Type: String
    Description:  Port for SSH connection
    Default: 22


Resources:
 
  TikalSecurityGroupPort:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref Vpc
      GroupDescription: SSH access to the Tikal server over specific port
      SecurityGroupIngress:
        #Allow ssh access from a specified block of addresses
        - CidrIp: !Ref AllowedCidrBlock
          Description: SSH access to the Tikal server
          IpProtocol: tcp
          FromPort: !Ref SSHPort
          ToPort: !Ref SSHPort
        - CidrIp:  !Ref AllowedCidrBlock
          Description: HTTPS/SSH access 
          IpProtocol: tcp
          FromPort: 443
          ToPort: 443
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Tikal Security Group Port

  TikalEc2Role:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      RoleName: !Sub ${EnvironmentName}-Tikal-ec2-role-${AWS::Region}
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ec2.amazonaws.com


  TikalHostPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub ${EnvironmentName}-Tikal-host-policy
      Roles:
        - !Ref TikalEc2Role
      PolicyDocument:
        Statement:
          - Effect: Allow
            Action:
              - ec2:Describe*
              - ec2:DeleteTags
              - ec2:CreateTags
              - logs:CreateLogGroup
            Resource: "*"

  TikalProfile:  
    DependsOn: TikalHostPolicy  
    Type: 'AWS::IAM::InstanceProfile'  
    Properties:  
      Roles:  
        - !Ref TikalEc2Role  


  Tikal:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref ImageId
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      SecurityGroupIds:
        - !Ref TikalSecurityGroupPort
      IamInstanceProfile: !Ref TikalProfile
      SubnetId: !Ref SubnetId
      UserData:
        "Fn::Base64": !Sub |
          #!/bin/sh
          echo 'Doing a "yum update"'
          yum update -
          wget -O /etc/yum.repos.d/jenkins.repo https://pkg.jenkins.io/redhat/jenkins.repo
          rpm --import https://pkg.jenkins.io/redhat/jenkins.io.key
          sed -i "s/gpgcheck=1/gpgcheck=0/g" /etc/yum.repos.d/jenkins.repo
          yum install -y jenkins
          echo 'jenkins ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers
          echo 'Installing Java'
          yum install -y java-1.8.
          echo 'Starting Jenkins service'
          service jenkins start
          sleep 1
          cat /var/lib/jenkins/secrets/initialAdminPassword             
          
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-Tikal-server



  IPAddress:
    Type: AWS::EC2::EIP
  IPAssoc:
    Type: AWS::EC2::EIPAssociation
    Properties:
      InstanceId: !Ref 'Tikal'
      EIP: !Ref 'IPAddress'

